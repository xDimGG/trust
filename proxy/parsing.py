import struct

stuff = [
	# '3600809682470040e3450000000000000000000080003600',
	# 'd100801683470040da45000000000000000000008000d100',
	# '6b00801683470040d1450000000000000000000080006b00',
	# '12008080904700c0b0450000000000000000000080001200',
	# 'b901809682470040d445000000000000000000008000b901',
	# '7c0080d682470040d7450000000000000000000080007c00',
	# '6c0080d682470040e0450000000000000000000080006c00',
	# '140080d682470040e3450000000000000000000080001400',
	# 'cf00809682470040d145000000000000000000008000cf00',
	# 'a00080ee88470040a145000000000000000000008000a000',
	# 'e300801683470040e345000000000000000000008000e300',
	# 'b20080d682470040dd45000000000000000000008000b200',
	# '130080d682470040d4450000000000000000000080001300',
	# 'e400806ed64700c0ce45000000000000000000008000e400',
	# '160080d682470040d1450000000000000000000080001600',
	# '2602809682470040e0450000000000000000000080002602',
	# 'e500801683470040e045000000000000000000008000e500',
	# '1100804681470040d1450000000000000000000080001100',
	# '7101801683470040d4450000000000000000000080007101',
	# 'd000801683470040d745000000000000000000008000d000',
	# '0100801683470040da450000000000000000ff008c000000a04000842846d100',
	# '0200801683470040d1450000000000000000ff008c000000a04000b0b0456b00',
	# '0400809682470040d4450000000000000000ff008c000000a04000f08345b901',
	# '050080d682470040d7450000000000000000ff008c000000a04000c8ee457c00',
	# '060080d682470040e0450000000000000000ff008c000000a040004003446c00',
	# '0800809682470040d1450000000000000000ff008c000000a04000b8e345cf00',
	# '0b0080d682470040dd450000000000000000ff008c000000a04000401a46b200',
	# '0c0080d682470040d4450000000000000000ff008c000000a040000028451300',
	# '0e0080d682470040d1450000000000000000ff008c000000a0400018b0451600',
	# '0f00809682470040e0450000000000000000ff008c000000a04000f02b452602',
	# '1000801683470040e0450000000000000000ff008c000000a04000b41b46e500',
	# '1100804681470040d1450000000000000000ff008c000000a0400070d8451100',
	# '1200801683470040d4450000000000000000ff008c000000a04000307c457101',
	# '1300801683470040d7450000000000000000ff008c000000a04000109945d000',
	# '0000809682470040e3450000000000000000ff008c000000a04000d8a6453600',
	# '070080d682470040e3450000000000000000ff008c000000a0400020be451400',
	# '0a00801683470040e3450000000000000000ff008c000000a0400080cd45e300',
	# '090080ee88470040a1450000000000000000ff008c000000a04000482846a000',
	# '0000809682470040e3450000000000000000ff008c000000a04000d8a6453600',
	# '0100801683470040da450000000000000000ff008c000000a04000842846d100',
	# '0200801683470040d1450000000000000000ff008c000000a04000b0b0456b00',
	# '03008080904700c0b0450000000000000000ff00cd000000a040002017461200',
	# '0400809682470040d4450000000000000000ff008c000000a04000f08345b901',
	# '050080d682470040d7450000000000000000ff008c000000a04000c8ee457c00',
	# '060080d682470040e0450000000000000000ff008c000000a040004003446c00',
	# '070080d682470040e3450000000000000000ff008c000000a0400020be451400',
	# '0800809682470040d1450000000000000000ff008c000000a04000b8e345cf00',
	# '090080ee88470040a1450000000000000000ff008c000000a04000482846a000',
	# '0a00801683470040e3450000000000000000ff008c000000a0400080cd45e300',
	# '0b0080d682470040dd450000000000000000ff008c000000a04000401a46b200',
	# '0c0080d682470040d4450000000000000000ff008c000000a040000028451300',
	# '0d00806ed64700c0ce450000000000000000ff008c000000a0400030c345e400',
	# '0e0080d682470040d1450000000000000000ff008c000000a0400018b0451600',
	# '0f00809682470040e0450000000000000000ff008c000000a04000f02b452602',
	# '1000801683470040e0450000000000000000ff008c000000a04000b41b46e500',
	# '1100804681470040d1450000000000000000ff008c000000a0400070d8451100',
	# '1200801683470040d4450000000000000000ff008c000000a04000307c457101',
	# '1300801683470040d7450000000000000000ff008c000000a04000109945d000',
	# '140000b42e460090cd450000000000000000ff008e000000b0410000c841b501',
	# '1500007c2c460040d0450000000000000000ff00e500006089440000a8c17b01',
	# '160000742d460040d0450000000000000000ff00e7000000c6420000a8c1b601',
	# '1700007430460040d0450000000000000000ff00a6000000c6420000a8c1b601',
	# '1800007c31460040cc450000000000000000ff00a400006089440000a8c17b01',
	# '640080eb81470040d745000000000000000000008e0000e881450000d743e801',
	# '650080db81470040d745000000000000000000008e0000d881450000d743e801',
	# '1500007c2c460040d0450000000000000000ff00e50000007a440000a8c17b01',
	# '160000742d460040d0450000000000000000ff00e3000000a8c1b601',
	# '1700007430460040d0450000000000000000ff00a2000000a8c1b601',
	# '1800007c31460040cc450000000000000000ff00a40000007a440000a8c17b01',
]

for data in stuff:
	buf = bytes.fromhex(data)

	def i(t):
		global buf

		n = struct.calcsize(t)
		num = struct.unpack(t, buf[:n])
		buf = buf[n:]
		return num

	print('world id', i('H'))
	print('pos', i('ff'))
	print('vel', i('ff'))
	print('target', i('H'))
	flags_1, flags_2 = i('BB')
	print('flags', flags_1, flags_2)
	for f in range(2, 6):
		if flags_1 & (1 << f) != 0:
			print('ai', f, i('f'))
	print('npc id', i('h'))
	if flags_2 & 1 != 0:
		print('statsAreScaledForThisManyPlayers', i('B'))
	if flags_2 & 4 != 0:
		print('strengthMultiplier', i('f'))
	if flags_1 & 128 == 0:
		health, = i('B')
		if health == 2: health = i('h')
		elif health == 4: health = i('i')
		else: health = i('b')
		print('health', health)

	assert len(buf) == 0
	print('------------')